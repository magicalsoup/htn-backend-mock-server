type ActivityAggregate {
  _all: Int!
}

type ActivityFrequency {
  _count: ActivityAggregate!
  activity_name: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  scanUser(activity_category: String!, activity_name: String!, uid: Int!): Scan!
  signInUser(qr_code_hash: String!, signed_in_at: DateTime!): User!
  signOutUser(qr_code_hash: String!): User!
  updateUser(data: UserUpdateInput, id: Int!): User!
}

type Query {
  allUsers: [User!]!
  scans(activity_category: String, max_frequency: Int, min_frequency: Int): [ActivityFrequency!]!
  signInData(end_time: DateTime!, start_time: DateTime!): [SignInData!]!
  user(email: String, id: Int, qr_code_hash: String): User
}

type Scan {
  activity_category: String!
  activity_name: String!
  scanned_at: DateTime!
  user: User!
}

type SignInData {
  hour: String!
  num_of_users: Int!
}

type User {
  badge_code: String!
  email: String!
  id: Int!
  name: String
  phone: String!
  qr_code_hash: String!
  salt: String!
  scans: [Scan!]!
  signed_in: Boolean!
  signed_in_at: DateTime
  updated_at: DateTime!
}

input UserUpdateInput {
  badge_code: String
  email: String
  name: String
  phone: String
}